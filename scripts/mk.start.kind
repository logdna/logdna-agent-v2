#!/bin/bash
#
# - build "socat:local" image
# - build "logdna-agent-kind:building" image 
# - load images into Kind
# - start Kind cluster
#
set -e
OWN_PATH=$(readlink -f "$0")
OWN_DIR=$(dirname "$OWN_PATH")
pushd "$OWN_DIR/.."

./docker/kind_start.sh
# workaround for Rust
sed -i "s/127.0.0.1/agent-dev-cluster-control-plane/" ./docker/.kind_config_host
HOSTS=$(</etc/hosts)
if [[ ! $HOSTS =~ "agent-dev-cluster-control-plane" ]]; then
  echo "Add '127.0.0.1 agent-dev-cluster-control-plane' to /etc/hosts file!"
  exit 1
fi

echo "Creating sample-pod & sample-job"
KUBECONFIG=./docker/.kind_config_host kubectl apply -f ./docker/kind/test-resources.yaml

source ./docker/lib.sh

echo "Building socat image"
DOCKER_BUILDKIT=1 docker build -t "socat:local" ./docker/socat

echo "Building Agent Image"
image="logdna-agent-kind:building"
DOCKER_BUILDKIT=1 docker build . \
  -f Dockerfile.debian \
  -t "$image" \
  --pull \
  --progress=plain \
  --build-arg BUILD_IMAGE=docker.io/logdna/build-images:rust-bullseye-1-stable-$(get_host_arch) \
  --build-arg SCCACHE_BUCKET=$SCCACHE_BUCKET \
  --build-arg SCCACHE_REGION=$SCCACHE_REGION

echo "Loading into kind"

if [ -z "$BUILD_TAG" ]
then
  cluster_name=agent-dev-cluster
else
  cluster_name=$(echo $BUILD_TAG | tr '[:upper:]' '[:lower:]' | tail -c 32)
fi

kind load docker-image $image --name "$cluster_name"
kind load docker-image "socat:local" --name "$cluster_name"


echo
echo @@@@@@  SUCCESS  @@@@@@
echo
