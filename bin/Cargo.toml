# version bump checklist
# 1) version = "X.Y.Z" in this file
#       ../bin/Cargo.toml
# 2) version in all the k8s yaml image: logdna/logdna-agent-v2:X.Y.Z
#       ../k8s/*.yaml
# 3) update changelog
#       ../CHANGELOG.md
# 4) *optional* run 'cargo update' so that new deps are pulled in
# 5) once the diff/pr is accepted tag the commit in master X.Y.Z, this will trigger the CI job

[package]
name = "logdna-agent"
version = "3.9.0-dev"
authors = ["CJP10 <connor.peticca@logdna.com>"]
edition = "2018"
build = "build.rs"

[[bin]]
name = "logdna-agent"
path = "src/main.rs"

[[bin]]
name = "logdna-agent-svc"
path = "src/service_main.rs"
required-features = ['windows_service']

[dependencies]
#local
http = { package = "mz-http", path = "../common/http" }
fs = { package = "fs", path = "../common/fs" }
config = { package = "config", path = "../common/config" }
middleware = { package = "middleware", path = "../common/middleware" }
k8s = { package = "k8s", path = "../common/k8s" }
metrics = { package = "metrics", path = "../common/metrics" }
journald = { package = "journald", path = "../common/journald" }
state = { package = "state", path = "../common/state" }
api = { package = "api", path = "../api" }
rate-limit-macro = { package = "rate-limit-macro", path = "../common/misc/rate-limit/macro" }

bytes = "1"
time = "0.3"
async-trait = "0.1"
kube = { version = "0.80", default-features = false, features = ["rustls-tls"] }
env_logger = "0.9"
anyhow = "1"
serde_yaml = "0.8"
futures = "0.3"
tokio = { version = "1", features = ["rt-multi-thread", "signal", "time"] }
tokio-stream = "0.1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"]}
pin-utils = "0.1"
regex = "1"
auditable = { version = "0.1", optional = true }
miniz_oxide = "0.5"
rand = "0.8.5"
shell-words = "1.0"
async-channel = "1.8"
once_cell = "1.10"

rlimit = "0.10"

[target.'cfg(any(windows))'.dependencies]
winservice = { git = "https://github.com/dkhokhlov/winservice.git" }
flexi_logger = { version = "0.22", features = ["async"] }

# Dependency for linux integration tests
[target.'cfg(target_os="linux")'.dependencies]
systemd = { package = "systemd", version = "0.10", optional = true}
capctl = "0.2"

[target.'cfg(unix)'.dependencies]
tikv-jemallocator  = { version = "0.5", default-features = false, features = ["stats"], optional = true }
dhat = { version = "0.3", optional = true }

[features]
default = ["dep_audit", "jemalloc"]
dep_audit = ["auditable", "auditable-build"]
integration_tests = []
profiling = ["tikv-jemallocator/profiling"]
slow_tests = []
k8s_tests = []
libjournald = ["journald/libjournald", "systemd" ]
journald_tests = ["journald/journald_tests", "systemd" ]
windows_service = []

jemalloc = ["tikv-jemallocator", "metrics/jemalloc"]
dhat-heap = ["dhat"]    # if you are doing heap profiling
dhat-ad-hoc = []  # if you are doing ad hoc profiling

[dev-dependencies]
assert_cmd = "2"
escargot = "0.5"
kube = { version = "0.80.0", default-features = false, features = ["rustls-tls"] }
kube-runtime = "0.80.0"
k8s-openapi = { version = "0.17.0", default_features = false, features = ["v1_20"] }
pnet = "0.28"
itertools = "0.10"
rustls-pemfile = "0.2"
pnet_datalink = "0.31"
predicates = "2"
tempfile = "3"
rustls = "0.20"
rcgen = "0.9"
logdna_mock_ingester = { package = "logdna-mock-ingester", path = "../common/test/mock-ingester" }
logdna-metrics-recorder = { package = "logdna-metrics-recorder", path = "../utils/metrics-recorder" }
test_types = { package = "types", path = "../common/test/types" }
proptest = "1"
tokio-test = "0.4"
futures = "0.3"
rand = "0.8"
nix = "0.24"
wait-timeout = "0.2"
hyper = { version = "0.14", features = ["http1"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
prometheus-parse = { git = "https://github.com/ccakes/prometheus-parse-rs", rev = "a4574e9" }
float-cmp = "0.9.0"
serial_test = "0.8"
chrono = { version = "0.4", features = ["serde"] }
test-log = { version = "0.2", features = ["trace"] }

[target.'cfg(target_os="linux")'.dev-dependencies]
pnet = "0.28"
systemd = { package = "systemd", version = "0.10" }

[build-dependencies]
auditable-build = { version = "0.1", optional = true }

[profile.release]
opt-level = 2
debug = true
